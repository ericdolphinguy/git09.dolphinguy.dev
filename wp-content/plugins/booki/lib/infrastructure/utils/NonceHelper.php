<?php
class Booki_NonceHelper{
	public static function create($action = -1) {
		$time = time();
		$nonce = wp_create_nonce($time . $action);
		return $nonce . '-' . $time;
	}
	
	public static function verify($action){
		$nonce = isset($_POST['booki_nonce']) ? $_POST['booki_nonce'] : null;
		if(!$nonce){
			$nonce = isset($_GET['booki_nonce']) ? $_GET['booki_nonce'] : null;
		}
		if(!$nonce){
			return false;
		}
		return self::verifyOneTime($nonce, $action);
	}
	
	public static function verifyOneTime( $_nonce, $action = -1) {
		//Extract timestamp and nonce part of $_nonce
		$parts = explode( '-', $_nonce );
		$nonce = $parts[0]; // Original nonce generated by WordPress.
		$generated = $parts[1]; //Time when generated

		$nonce_life = 60*60; //We want these nonces to have a short lifespan
		$expires = (int) $generated + $nonce_life;
		$time = time(); //Current time

		//Verify the nonce part and check that it has not expired
		if( ! wp_verify_nonce( $nonce, $generated.$action ) || $time > $expires ){
			return false;
		}
		
		//Get used nonces
		$used_nonces = get_option('booki_sh_used_nonces');
		
		//Nonce already used.
		if( $used_nonces && isset( $used_nonces[$nonce] ) ){
			return false;
		}
		
		if(!$used_nonces){
			$used_nonces = array();
		}
		
		foreach ($used_nonces as $nonce=>$timestamp){
			if( $timestamp > $time ){
				break;
			}
			//This nonce has expired, so we don't need to keep it any longer
			unset( $used_nonces[$nonce] );
		}

		//Add nonce to used nonces and sort
		$used_nonces[$nonce] = $expires;
		asort( $used_nonces );
		update_option( 'booki_sh_used_nonces', $used_nonces );
		
		return true;
	}
	
	public static function isHuman($projectId){
		return $_POST['booki_' . $projectId . '_humanics'] === '';
	}
}
?>